input {
    kafka {
    client_id => "k8slog"
    type => "k8slog"
    bootstrap_servers => "kafka-logging-service:9092"
    consumer_threads => 3
    codec => json { charset => "UTF-8" }
    topics_pattern => "k8s-log.*"
    }
    kafka {
    client_id => "systemdlog"
    type => "systemdlog"
    bootstrap_servers => "kafka-logging-service:9092"
    consumer_threads => 3
    codec => json { charset => "UTF-8" }
    topics_pattern => "systemd-log.*"
    }
}

filter {
    if [message] =~ /^\s*$/ {
        drop { }
    }
    grok {
    match => { "message" => "(?<level>([Aa]lert|ALERT|[Tt]race|TRACE|[Dd]ebug|DEBUG|[Nn]otice|NOTICE|[Nn]ote|NOTE|[Ii]nfo|INFO|[Ww]arn|WARN|[Ee]rr|ERR|[Cc]rit|CRIT|[Ff]atal|FATAL|EMERG|[Ee]merg))" }
    tag_on_failure => "nomatchlevel"
    }
    
    #grok {
    #  match => { "message" => "\S*\[(?<requestID>([\S+]*)),(?<traceID>([\S+]*)),(?<spanID>([\S+]*))\]\S*" }
    #  tag_on_failure => "notraceid"
    #}

    #if "notraceid" in [tags] {
    #  mutate {
    #    add_field => { 
    #      "requestID" => "0"
    #      "traceID" => "0"
    #      "spanID" => "0"
    #    }
    #  }
    #}
    
    if "nomatchlevel" in [tags] {
    mutate {
        add_field => { "level" => "info" }
    }
    }

    mutate {
    lowercase => [ "level" ]
    }
    if [type] == "systemdlog" {
    grok {
        match => ["message","(?<logdate>%{MONTH} +%{MONTHDAY} %{TIME})"]
    }
    date {
        match => ["logdate", "MMM d HH:mm:ss"]
        timezone => "Asia/Shanghai"
    }
    }
    if [type] == "k8slog" {
    mutate { add_field => { "[@metadata][target_index]" => "k8s-log.%{[kubernetes][namespace]}.%{+YYYY-MM-dd}" } }
    } else if [type] == "systemdlog" {
    mutate { add_field => { "[@metadata][target_index]" => "systemd-log.%{[host][name]}.%{+YYYY-MM-dd}" } }
    } else {
    mutate { add_field => { "[@metadata][target_index]" => "unknown-log.%{+YYYY-MM-dd}" } }
    }
}

output {
    elasticsearch { 
    hosts => ["http://es-logging-service:9200" ]
    index => "%{[@metadata][target_index]}"
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    ilm_enabled => false
    ssl => false
    ssl_certificate_verification => false
    template_name => "efk"
    template => "/usr/share/logstash/config/efk-template.json"
    template_overwrite => true
    }
}